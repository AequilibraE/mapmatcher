name: Build Package

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Build SDist
        run: uv build --sdist

      - name: Test SDist installation
        run: |
          uv venv test-env
          source test-env/bin/activate || test-env\Scripts\activate
          uv pip install dist/*.tar.gz
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}
      cancel-in-progress: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Create virtual environment
        run: uv venv --python ${{ matrix.python-version }}

      - name: Activate virtual environment and install dependencies
        run: |
          source .venv/bin/activate || .venv\Scripts\activate
          uv pip install build wheel setuptools
        shell: bash

      - name: Build wheel
        run: |
          source .venv/bin/activate || .venv\Scripts\activate
          uv build --wheel
        shell: bash

      - name: Test wheel installation
        run: |
          uv venv test-env-${{ matrix.python-version }}
          source test-env-${{ matrix.python-version }}/bin/activate || test-env-${{ matrix.python-version }}\Scripts\activate
          uv pip install dist/*.whl
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: ./dist/*.whl

  upload_all:
    needs: [build_wheels, make_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        run: uv publish --token ${{ secrets.PYPI_API_TOKEN }}
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
